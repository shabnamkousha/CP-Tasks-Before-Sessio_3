1- Implement int sqrt(int x).

public class Solution {
	public int sqrt(int a) {
	    if(a==0 || a==1){
	        return a;
	    }
	    
	    long start=1;
	    long end=a;
	    long result=0;
	    
	    while(start<=end){
	       long mid=(start+end)/2;
	       if(mid*mid==a){
	           return (int) mid;
	       }
	       if(mid*mid<a){
	           start=mid+1;
	           result=mid;
	       } else{
	           end=mid-1;
	       }
	    }
	    return (int) result;
	}
}

--------------------------------------------

2- Write an efficient algorithm that searches for a value in an m x n matrix.

public class Solution {
	public int searchMatrix(ArrayList<ArrayList<Integer>> a, int b) {
	     if (a.size() == 0 || a.get(0).size() == 0) {
            return 0;
         }
         int num_cols=a.get(0).size();
         int num_row=a.size();
         int left = 0;
         int right = num_row * num_cols - 1;
         while (left <= right) {
            int mid = (left + right) / 2;
            int i = mid / num_cols;
            int j = mid % num_cols;
            int mid_value = a.get(i).get(j);
            if (mid_value == b) {
                return 1;
            } else if (mid_value < b) {
                left = mid + 1;
            } else {
                right = mid - 1;
            }
        }
        return 0;
	}
}


